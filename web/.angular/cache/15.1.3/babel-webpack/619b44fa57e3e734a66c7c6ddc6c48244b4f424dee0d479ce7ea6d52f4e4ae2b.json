{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../auth/auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction RegisterComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nconst _c0 = function () {\n  return [\"/login\"];\n};\nexport class RegisterComponent {\n  constructor(formBuilder, authService) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.errorMessage = '';\n    this.registerForm = new FormGroup({\n      username: new FormControl('', [Validators.required, Validators.minLength(4)]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required]),\n      confirmPassword: new FormControl('', [Validators.required]),\n      name: new FormControl('', [Validators.required])\n    });\n  }\n  checkPasswords() {\n    let pass = this.registerForm.get('password').value;\n    let confirmPass = this.registerForm.get('confirmPassword').value;\n    return pass === confirmPass;\n  }\n  onSubmit() {\n    if (this.checkPasswords()) {\n      const user = this.registerForm.value;\n      delete user['confirmPassword'];\n      this.authService.registerUser(user);\n      this.errorMessage = '';\n    } else {\n      this.errorMessage = 'Passwords do not match';\n    }\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 34,\n  vars: 5,\n  consts: [[3, \"formGroup\", \"submit\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"formControlName\", \"username\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"name\", \"confirmPassword\", \"formControlName\", \"confirmPassword\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"formControlName\", \"name\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\"], [\"type\", \"submit\", \"value\", \"Submit\", 3, \"disabled\"], [4, \"ngIf\"], [3, \"routerLink\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function RegisterComponent_Template_form_submit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"label\", 1);\n      i0.ɵɵtext(4, \"Username:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"br\")(6, \"input\", 2)(7, \"br\");\n      i0.ɵɵelementStart(8, \"label\", 3);\n      i0.ɵɵtext(9, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"br\")(11, \"input\", 4)(12, \"br\");\n      i0.ɵɵelementStart(13, \"label\", 3);\n      i0.ɵɵtext(14, \"Repeat password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"br\")(16, \"input\", 5)(17, \"br\");\n      i0.ɵɵelementStart(18, \"label\", 3);\n      i0.ɵɵtext(19, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"br\")(21, \"input\", 6)(22, \"br\");\n      i0.ɵɵelementStart(23, \"label\", 7);\n      i0.ɵɵtext(24, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"br\")(26, \"input\", 8)(27, \"br\")(28, \"input\", 9)(29, \"br\")(30, \"br\");\n      i0.ɵɵtemplate(31, RegisterComponent_div_31_Template, 2, 1, \"div\", 10);\n      i0.ɵɵelementStart(32, \"a\", 11);\n      i0.ɵɵtext(33, \"Return to login\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(26);\n      i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c0));\n    }\n  },\n  dependencies: [i3.NgIf, i4.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}