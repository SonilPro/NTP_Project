{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../api-provider.service\";\nexport class AuthService {\n  constructor(router, apiProvider) {\n    this.router = router;\n    this.apiProvider = apiProvider;\n    this.user = null;\n    this.users = [];\n    this.errorEmitter = new Subject();\n    this.authChange = new Subject();\n    apiProvider.getUsers().subscribe(res => {\n      this.users = res;\n    });\n  }\n  registerUser(user) {\n    this.apiProvider.addUser(user).subscribe(res => this.router.navigate(['/login']));\n  }\n  login(credentials) {\n    this.apiProvider.getUsers().subscribe(res => {\n      this.users = res;\n      let u = this.users.find(u => u.username == credentials.username && u.password == credentials.password);\n      if (u) {\n        this.user = u;\n        localStorage.setItem('user', JSON.stringify(this.user));\n        this.authChange.next(true);\n        this.router.navigate(['/']);\n      } else {\n        this.errorEmitter.next('Wrong credentials');\n      }\n    });\n  }\n  logout() {\n    this.user = null;\n    localStorage.removeItem('user');\n    this.authChange.next(false);\n    this.router.navigate(['/login']);\n  }\n  getUser() {\n    let u = localStorage.getItem('user');\n    if (!this.user && u) this.user = JSON.parse(u);\n    return {\n      ...this.user\n    };\n  }\n  isAuthenticated() {\n    let u = localStorage.getItem('user');\n    if (!this.user && u) this.user = JSON.parse(u);\n    return this.user != null;\n  }\n  getUserNameFromId(userId) {\n    return this.users.find(user => user._id === userId)?.username ?? 'Unknown user';\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.ApiProviderService));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}