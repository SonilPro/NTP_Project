{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth/auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nconst _c0 = function () {\n  return [\"/register\"];\n};\nexport class LoginComponent {\n  constructor(auth) {\n    this.auth = auth;\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    this.signinForm = new FormGroup({\n      'username': new FormControl(null, [Validators.required]),\n      'password': new FormControl(null, [Validators.required])\n    });\n    this.auth.errorEmitter.subscribe(error => {\n      this.errorMessage = error;\n    });\n  }\n  onLogin() {\n    this.auth.login(this.signinForm.value);\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 10,\n  vars: 5,\n  consts: [[3, \"formGroup\", \"submit\"], [\"type\", \"text\", \"formControlName\", \"username\", \"placeholder\", \"Enter username\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter password\"], [\"type\", \"submit\", 3, \"disabled\"], [3, \"routerLink\"], [4, \"ngIf\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_0_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵelementStart(1, \"fieldset\");\n      i0.ɵɵelement(2, \"input\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"fieldset\");\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 3);\n      i0.ɵɵtext(6, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 4);\n      i0.ɵɵtext(8, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 2, 1, \"div\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.signinForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"disabled\", ctx.signinForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c0));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n    }\n  },\n  dependencies: [i2.NgIf, i3.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;ICQjEC,2BAA0B;IAAAA,YAAgB;IAAAA,iBAAM;;;;IAAtBA,eAAgB;IAAhBA,yCAAgB;;;;;;ADA5C,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,IAAkB;IAAlB,SAAI,GAAJA,IAAI;IAHxB,iBAAY,GAAY,EAAE;EAGgB;EAE1CC,QAAQ;IAEN,IAAI,CAACC,UAAU,GAAG,IAAIP,SAAS,CAAC;MAC9B,UAAU,EAAG,IAAID,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACO,QAAQ,CAAC,CAAC;MACzD,UAAU,EAAG,IAAIT,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACO,QAAQ,CAAC;KACzD,CAAC;IAEF,IAAI,CAACH,IAAI,CAACI,YAAY,CACjBC,SAAS,CAAEC,KAAc,IAAI;MAC5B,IAAI,CAACC,YAAY,GAAGD,KAAK;IAC3B,CAAC,CAAC;EAER;EAEAE,OAAO;IACL,IAAI,CAACR,IAAI,CAACS,KAAK,CAAC,IAAI,CAACP,UAAU,CAACQ,KAAK,CAAC;EACxC;;AAvBWZ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT3BlB,+BAAoD;MAA9CA;QAAA,OAAUmB,aAAS;MAAA,EAAC;MACxBnB,gCAAU;MACRA,2BAA2E;MAC7EA,iBAAW;MACXA,gCAAU;MACRA,2BAA+E;MACjFA,iBAAW;MACXA,iCAAsD;MAAAA,qBAAK;MAAAA,iBAAS;MACpEA,iCAAqC;MAAAA,wBAAQ;MAAAA,iBAAS;MACtDA,+DAAgD;MAClDA,iBAAO;;;MAVoBA,0CAAwB;MAO3BA,eAA+B;MAA/BA,iDAA+B;MAC7CA,eAA4B;MAA5BA,uDAA4B;MAC9BA,eAAkB;MAAlBA,uCAAkB","names":["FormControl","FormGroup","Validators","i0","LoginComponent","constructor","auth","ngOnInit","signinForm","required","errorEmitter","subscribe","error","errorMessage","onLogin","login","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Antonio Ereiz\\Desktop\\lab\\web\\src\\app\\login\\login.component.ts","C:\\Users\\Antonio Ereiz\\Desktop\\lab\\web\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  errorMessage : string = '';\n  signinForm! : FormGroup;\n\n  constructor(private auth : AuthService) { }\n\n  ngOnInit() {\n\n    this.signinForm = new FormGroup({\n      'username' : new FormControl(null, [Validators.required]),\n      'password' : new FormControl(null, [Validators.required])\n    });\n\n    this.auth.errorEmitter\n        .subscribe((error : string) => {\n          this.errorMessage = error;\n        });\n\n  }\n\n  onLogin(){\n    this.auth.login(this.signinForm.value);\n  }\n}\n","<form (submit)=\"onLogin()\" [formGroup]=\"signinForm\">\n  <fieldset>\n    <input type=\"text\" formControlName=\"username\" placeholder=\"Enter username\">\n  </fieldset>\n  <fieldset>\n    <input type=\"password\" formControlName=\"password\" placeholder=\"Enter password\">\n  </fieldset>\n  <button type=\"submit\" [disabled]=\"signinForm.invalid\">Login</button>\n  <button [routerLink]=\"['/register']\">Register</button>\n  <div *ngIf=\"errorMessage\">{{errorMessage}}</div>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}