{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { Post } from './posts/post.model';\nimport { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst BASE_URL = environment.production ? '' : environment.api_base_url;\nexport class ApiProviderService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  addUser(user) {\n    return this.httpClient.post('https://labos5-a8d2f-default-rtdb.europe-west1.firebasedatabase.app/users.json', user);\n  }\n  getPosts() {\n    return this.httpClient.get('http://localhost:5000/candy').subscribe(data => {\n      console.log(data);\n    }, addPost(post, Post), {\n      return: this.httpClient.post('https://labos5-a8d2f-default-rtdb.europe-west1.firebasedatabase.app/posts.json', post)\n    }, editPost(post, Post), {\n      return: this.httpClient.patch(`https://labos5-a8d2f-default-rtdb.europe-west1.firebasedatabase.app/posts/${post.id}/.json`, post)\n    }, deletePost(id, String), {\n      return: this.httpClient.delete(`https://labos5-a8d2f-default-rtdb.europe-west1.firebasedatabase.app/posts/${id}.json`)\n    }, getUsers(), {\n      return: this.httpClient.get('https://labos5-a8d2f-default-rtdb.europe-west1.firebasedatabase.app/users.json').pipe(map(res => {\n        const users = [];\n        for (let key in res) {\n          users.push({\n            ...res[key],\n            id: key\n          });\n        }\n        return users;\n      }))\n    });\n  }\n}\nApiProviderService.ɵfac = function ApiProviderService_Factory(t) {\n  return new (t || ApiProviderService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiProviderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiProviderService,\n  factory: ApiProviderService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;AACpC,SAASC,IAAI,QAAQ,oBAAoB;AAEzC,SAASC,WAAW,QAAQ,6BAA6B;;;AAEzD,MAAMC,QAAQ,GAAGD,WAAW,CAACE,UAAU,GAAG,EAAE,GAAGF,WAAW,CAACG,YAAY;AAGvE,OAAM,MAAOC,kBAAkB;EAC7BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;EAAc;EAE5CC,OAAO,CAACC,IAAU;IAChB,OAAO,IAAI,CAACF,UAAU,CAACG,IAAI,CACzB,gFAAgF,EAChFD,IAAI,CACL;EACH;EAEAE,QAAQ;IACN,OAAO,IAAI,CAACJ,UAAU,CACnBK,GAAG,CAAC,6BAA6B,CAAC,CAACC,SAAS,CAACC,IAAI,IAAE;MAC1DC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACf,CAAC,EAEDG,OAAO,CAACP,IAAI,EAAEV,IAAI,CAAC,EAAC;MAClBkB,MAAM,EAAC,IAAI,CAACX,UAAU,CAACG,IAAI,CACzB,gFAAgF,EAChFA,IAAI;KAEP,EAEDS,QAAQ,CAACT,IAAI,EAAEV,IAAI,CAAC,EAAC;MACnBkB,MAAM,EAAC,IAAI,CAACX,UAAU,CAACa,KAAK,CAC1B,6EAA6EV,IAAI,CAACW,EAAE,QAAQ,EAAEX,IAAI;KAErG,EAEDY,UAAU,CAACD,EAAE,EAAEE,MAAM,CAAC,EAAC;MACrBL,MAAM,EAAC,IAAI,CAACX,UAAU,CAACiB,MAAM,CAC3B,6EAA6EH,EAAE,OAAO;KAEzF,EAEDI,QAAQ,EAAE,EAAC;MACTP,MAAM,EAAC,IAAI,CAACX,UAAU,CACnBK,GAAG,CACF,gFAAgF,CACjF,CACAc,IAAI,CACH3B,GAAG,CAAE4B,GAAQ,IAAI;QACf,MAAMC,KAAK,GAAG,EAAE;QAChB,KAAK,IAAIC,GAAG,IAAIF,GAAG,EAAE;UACnBC,KAAK,CAACE,IAAI,CAAC;YAAE,GAAGH,GAAG,CAACE,GAAG,CAAC;YAAER,EAAE,EAAEQ;UAAG,CAAE,CAAC;;QAEtC,OAAOD,KAAK;MACd,CAAC,CAAC;KAEP;EACH;;AAlDavB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAA0B,SAAlB1B,kBAAkB;EAAA2B,YADL;AAAM","names":["map","Post","environment","BASE_URL","production","api_base_url","ApiProviderService","constructor","httpClient","addUser","user","post","getPosts","get","subscribe","data","console","log","addPost","return","editPost","patch","id","deletePost","String","delete","getUsers","pipe","res","users","key","push","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Antonio Ereiz\\Desktop\\lab\\web\\src\\app\\api-provider.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Post } from './posts/post.model';\r\nimport { User } from './auth/user.model';\r\nimport { environment } from '../environments/environment';\r\n\r\nconst BASE_URL = environment.production ? '' : environment.api_base_url;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ApiProviderService {\r\n  constructor(private httpClient: HttpClient){}\r\n\r\n  addUser(user: User) {\r\n    return this.httpClient.post(\r\n      'https://labos5-a8d2f-default-rtdb.europe-west1.firebasedatabase.app/users.json',\r\n      user\r\n    );\r\n  }\r\n\r\n  getPosts() {\r\n    return this.httpClient\r\n      .get('http://localhost:5000/candy').subscribe(data=>{\r\nconsole.log(data)\r\n  }\r\n\r\n  addPost(post: Post) {\r\n    return this.httpClient.post(\r\n      'https://labos5-a8d2f-default-rtdb.europe-west1.firebasedatabase.app/posts.json',\r\n      post\r\n    );\r\n  }\r\n\r\n  editPost(post: Post) {\r\n    return this.httpClient.patch(\r\n      `https://labos5-a8d2f-default-rtdb.europe-west1.firebasedatabase.app/posts/${post.id}/.json`, post\r\n    );\r\n  }\r\n\r\n  deletePost(id: String) {\r\n    return this.httpClient.delete(\r\n      `https://labos5-a8d2f-default-rtdb.europe-west1.firebasedatabase.app/posts/${id}.json`\r\n    );\r\n  }\r\n\r\n  getUsers() {\r\n    return this.httpClient\r\n      .get(\r\n        'https://labos5-a8d2f-default-rtdb.europe-west1.firebasedatabase.app/users.json'\r\n      )\r\n      .pipe(\r\n        map((res: any) => {\r\n          const users = [];\r\n          for (let key in res) {\r\n            users.push({ ...res[key], id: key });\r\n          }\r\n          return users;\r\n        })\r\n      );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}