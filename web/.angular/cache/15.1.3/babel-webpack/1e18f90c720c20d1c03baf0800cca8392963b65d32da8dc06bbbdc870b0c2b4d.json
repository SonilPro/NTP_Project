{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api-provider.service\";\nexport class PostsService {\n  constructor(apiProvider) {\n    this.apiProvider = apiProvider;\n    this.posts = [];\n    this.postsSubject = new Subject();\n  }\n  getPosts() {\n    this.apiProvider.getPosts().subscribe(res => {\n      this.posts = res;\n      this.postsSubject.next([...this.posts]);\n    });\n    return this.postsSubject;\n  }\n  addPost(post) {\n    post.timestamp = new Date().toISOString().slice(0, 19).replace('T', ' ');\n    this.apiProvider.addPost(post).subscribe(res => {\n      this.posts.push({\n        ...post\n      });\n      this.postsSubject.next([...this.posts]);\n    });\n  }\n  editPost(post) {\n    this.apiProvider.editPost(post).subscribe(res => {\n      this.posts[this.posts.findIndex(p => p._id == post._id)] = post;\n      this.postsSubject.next([...this.posts]);\n    });\n  }\n  deletePost(id) {\n    this.apiProvider.deletePost(id).subscribe(res => {\n      this.posts = this.posts.filter(post => post._id != id);\n      this.postsSubject.next([...this.posts]);\n    });\n  }\n}\nPostsService.ɵfac = function PostsService_Factory(t) {\n  return new (t || PostsService)(i0.ɵɵinject(i1.ApiProviderService));\n};\nPostsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PostsService,\n  factory: PostsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,OAAO,QAAQ,MAAM;;;AAM9B,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,WAA+B;IAA/B,gBAAW,GAAXA,WAAW;IAH/B,UAAK,GAAW,EAAE;IAClB,iBAAY,GAAoB,IAAIH,OAAO,EAAU;EAEC;EAE/CI,QAAQ;IACb,IAAI,CAACD,WAAW,CAACC,QAAQ,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAI;MAC5C,IAAI,CAACC,KAAK,GAAGD,GAAa;MAC1B,IAAI,CAACE,YAAY,CAACC,IAAI,CAAC,CAAC,GAAG,IAAI,CAACF,KAAK,CAAC,CAAC;IACzC,CAAC,CAAC;IACF,OAAO,IAAI,CAACC,YAAY;EAC1B;EAEOE,OAAO,CAACC,IAAU;IACvBA,IAAI,CAACC,SAAS,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;IACxE,IAAI,CAACb,WAAW,CAACO,OAAO,CAACC,IAAI,CAAC,CAACN,SAAS,CAAEC,GAAQ,IAAI;MACpD,IAAI,CAACC,KAAK,CAACU,IAAI,CAAC;QAAE,GAAGN;MAAI,CAAE,CAAC;MAC5B,IAAI,CAACH,YAAY,CAACC,IAAI,CAAC,CAAC,GAAG,IAAI,CAACF,KAAK,CAAC,CAAC;IACzC,CAAC,CAAC;EACJ;EAEOW,QAAQ,CAACP,IAAU;IACxB,IAAI,CAACR,WAAW,CAACe,QAAQ,CAACP,IAAI,CAAC,CAACN,SAAS,CAAEC,GAAQ,IAAI;MACrD,IAAI,CAACC,KAAK,CAAC,IAAI,CAACA,KAAK,CAACY,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,IAAIV,IAAI,CAACU,GAAG,CAAC,CAAC,GAAGV,IAAI;MACjE,IAAI,CAACH,YAAY,CAACC,IAAI,CAAC,CAAC,GAAG,IAAI,CAACF,KAAK,CAAC,CAAC;IACzC,CAAC,CAAC;EACJ;EAEOe,UAAU,CAACC,EAAU;IAC1B,IAAI,CAACpB,WAAW,CAACmB,UAAU,CAACC,EAAE,CAAC,CAAClB,SAAS,CAAEC,GAAG,IAAI;MAChD,IAAI,CAACC,KAAK,GAAG,IAAI,CAACA,KAAK,CAACiB,MAAM,CAAEb,IAAI,IAAKA,IAAI,CAACU,GAAG,IAAIE,EAAE,CAAC;MACxD,IAAI,CAACf,YAAY,CAACC,IAAI,CAAC,CAAC,GAAG,IAAI,CAACF,KAAK,CAAC,CAAC;IACzC,CAAC,CAAC;EACJ;;AAlCWN,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAwB,SAAZxB,YAAY;EAAAyB,YAFX;AAAM","names":["Subject","PostsService","constructor","apiProvider","getPosts","subscribe","res","posts","postsSubject","next","addPost","post","timestamp","Date","toISOString","slice","replace","push","editPost","findIndex","p","_id","deletePost","id","filter","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Antonio Ereiz\\Desktop\\lab\\web\\src\\app\\posts\\posts.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ApiProviderService } from '../api-provider.service';\r\nimport { Post } from './post.model';\r\nimport { Subject } from 'rxjs';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PostsService {\r\n  posts: Post[] = [];\r\n  postsSubject: Subject<Post[]> = new Subject<Post[]>();\r\n\r\n  constructor(private apiProvider: ApiProviderService) {}\r\n\r\n  public getPosts() {\r\n    this.apiProvider.getPosts().subscribe((res) => {\r\n      this.posts = res as Post[];\r\n      this.postsSubject.next([...this.posts]);\r\n    });\r\n    return this.postsSubject;\r\n  }\r\n\r\n  public addPost(post: Post) {\r\n    post.timestamp = new Date().toISOString().slice(0, 19).replace('T', ' ');\r\n    this.apiProvider.addPost(post).subscribe((res: any) => {\r\n      this.posts.push({ ...post });\r\n      this.postsSubject.next([...this.posts]);\r\n    });\r\n  }\r\n\r\n  public editPost(post: Post) {\r\n    this.apiProvider.editPost(post).subscribe((res: any) => {\r\n      this.posts[this.posts.findIndex((p) => p._id == post._id)] = post;\r\n      this.postsSubject.next([...this.posts]);\r\n    });\r\n  }\r\n\r\n  public deletePost(id: String) {\r\n    this.apiProvider.deletePost(id).subscribe((res) => {\r\n      this.posts = this.posts.filter((post) => post._id != id);\r\n      this.postsSubject.next([...this.posts]);\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}