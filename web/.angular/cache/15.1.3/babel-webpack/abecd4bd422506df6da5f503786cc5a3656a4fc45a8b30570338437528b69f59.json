{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst BASE_URL = environment.production ? '' : environment.api_base_url;\nexport class ApiProviderService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  addUser(user) {\n    return this.httpClient.post(BASE_URL + '/users', user);\n  }\n  getPosts() {\n    console.log(BASE_URL);\n    console.log(environment.pro);\n    return this.httpClient.get(BASE_URL + '/posts').pipe(map(res => {\n      return res.posts;\n    }));\n  }\n  addPost(post) {\n    return this.httpClient.post(BASE_URL + '/posts', post);\n  }\n  editPost(post) {\n    return this.httpClient.put(BASE_URL + '/posts', post);\n  }\n  deletePost(id) {\n    return this.httpClient.delete(BASE_URL + '/posts/' + id);\n  }\n  getUsers() {\n    return this.httpClient.get(BASE_URL + '/users').pipe(map(res => {\n      console.log(res);\n      return res.users;\n    }));\n  }\n}\nApiProviderService.ɵfac = function ApiProviderService_Factory(t) {\n  return new (t || ApiProviderService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiProviderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiProviderService,\n  factory: ApiProviderService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}